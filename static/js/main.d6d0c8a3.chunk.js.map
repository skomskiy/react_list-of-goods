{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","App","state","NONE","typeMove","typeSort","this","setState","prev","className","onClick","changeSatate","classNames","type","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAM7C,OAAOR,EAAaC,EAAaQ,UAAYR,G,SA5B1CN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAMe,EAAb,4MACEC,MAAyB,CACvBX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,kDAME,SAAaC,EAAmBC,GAC9B,MAAiB,SAAbD,GAAoC,UAAbC,EAClBC,KAAKC,UAAS,SAACC,GACpB,OAAO,2BACFA,GADL,IAEElB,SAAUJ,EAASO,cAKR,SAAbW,GAAoC,WAAbC,EAClBC,KAAKC,UAAS,SAACC,GACpB,OAAO,2BACFA,GADL,IAEElB,SAAUJ,EAASY,YAKR,YAAbM,GAA2BC,EASxBC,KAAKC,UAAS,SAACC,GACpB,OAAO,2BACFA,GADL,IAEElB,SAAUJ,EAASiB,KACnBZ,YAAY,OAZPe,KAAKC,UAAS,SAACC,GACpB,OAAO,2BACFA,GADL,IAEEjB,YAAaiB,EAAKjB,kBA7B5B,oBA2CE,WAA2B,IAAD,OACxB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAM,EAAKC,aAAa,OAAQ,UACzCF,UACEG,IAAW,iBAAkB,CAC3B,WAAYN,KAAKJ,MAAMZ,WAAaJ,EAASO,WAGjDoB,KAAK,SAPP,iCAYA,wBACEH,QAAS,kBAAM,EAAKC,aAAa,OAAQ,WACzCF,UACEG,IAAW,iBAAkB,CAC3B,WAAYN,KAAKJ,MAAMZ,WAAaJ,EAASY,SAGjDe,KAAK,SAPP,4BAYA,wBACEH,QAAS,kBAAM,EAAKC,aAAa,YACjCF,UACEG,IAAW,oBAAqB,CAC9B,YAAaN,KAAKJ,MAAMX,aAG5BsB,KAAK,SAPP,qBAYCP,KAAKJ,MAAMZ,UAAYgB,KAAKJ,MAAMX,WACjC,wBACEsB,KAAK,SACLJ,UAAU,4BACVC,QAAS,kBAAM,EAAKC,gBAHtB,mBAOE,MAGN,6BAEIvB,EAAkBD,EAAiBmB,KAAKJ,OAAOY,KAAI,SAAAC,GAAI,OACrD,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eAlGrB,GAAyBC,IAAMC,eCnD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6d0c8a3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  changeSatate(typeMove?: string, typeSort?: string) {\n    if (typeMove === 'sort' && typeSort === 'alpha') {\n      return this.setState((prev: State) => {\n        return {\n          ...prev,\n          sortType: SortType.ALPHABET,\n        };\n      });\n    }\n\n    if (typeMove === 'sort' && typeSort === 'length') {\n      return this.setState((prev: State) => {\n        return {\n          ...prev,\n          sortType: SortType.LENGTH,\n        };\n      });\n    }\n\n    if (typeMove === 'reverse' && !typeSort) {\n      return this.setState((prev: State) => {\n        return {\n          ...prev,\n          isReversed: !prev.isReversed,\n        };\n      });\n    }\n\n    return this.setState((prev: State) => {\n      return {\n        ...prev,\n        sortType: SortType.NONE,\n        isReversed: false,\n      };\n    });\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={() => this.changeSatate('sort', 'alpha')}\n            className={\n              classNames('button is-info', {\n                'is-light': this.state.sortType !== SortType.ALPHABET,\n              })\n            }\n            type=\"button\"\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={() => this.changeSatate('sort', 'length')}\n            className={\n              classNames('button is-info', {\n                'is-light': this.state.sortType !== SortType.LENGTH,\n              })\n            }\n            type=\"button\"\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={() => this.changeSatate('reverse')}\n            className={\n              classNames('button is-warning', {\n                'is-light': !this.state.isReversed,\n              })\n            }\n            type=\"button\"\n          >\n            Reverse\n          </button>\n\n          {this.state.sortType || this.state.isReversed ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.changeSatate()}\n            >\n              Reset\n            </button>\n          ) : ''}\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}